/*
 * ELB
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */

package model

import (
	"encoding/json"
	"errors"
	"github.com/huaweicloud/huaweicloud-sdk-go-v3/core/converter"
	"strings"
)

// 后端云服务器对象列表，用于状态树中
type MembersV2InStatusResp struct {
	// 后端云服务器ID
	Id string `json:"id"`
	// 后端云服务器的IP地址
	Address string `json:"address"`
	// 后端云服务器的端口号
	ProtocolPort int32 `json:"protocol_port"`
	// 后端云服务器的健康检状态；可以为：ONLINE：健康检查在线；OFFLINE：健康检查离线；DISABLED：后端云服务器无对应的弹性云服务器；NO_MONITOR：健康检查未开启
	OperatingStatus MembersV2InStatusRespOperatingStatus `json:"operating_status"`
	// 监听器的配置状态；该字段为预留字段，暂未启用。默认为ACTIVE。
	ProvisioningStatus string `json:"provisioning_status"`
}

func (o MembersV2InStatusResp) String() string {
	data, _ := json.Marshal(o)
	return strings.Join([]string{"MembersV2InStatusResp", string(data)}, " ")
}

type MembersV2InStatusRespOperatingStatus struct {
	value string
}

type MembersV2InStatusRespOperatingStatusEnum struct {
	ONLINE     MembersV2InStatusRespOperatingStatus
	OFFLINE    MembersV2InStatusRespOperatingStatus
	DISABLED   MembersV2InStatusRespOperatingStatus
	NO_MONITOR MembersV2InStatusRespOperatingStatus
}

func GetMembersV2InStatusRespOperatingStatusEnum() MembersV2InStatusRespOperatingStatusEnum {
	return MembersV2InStatusRespOperatingStatusEnum{
		ONLINE: MembersV2InStatusRespOperatingStatus{
			value: "ONLINE",
		},
		OFFLINE: MembersV2InStatusRespOperatingStatus{
			value: "OFFLINE",
		},
		DISABLED: MembersV2InStatusRespOperatingStatus{
			value: "DISABLED",
		},
		NO_MONITOR: MembersV2InStatusRespOperatingStatus{
			value: "NO_MONITOR",
		},
	}
}

func (c MembersV2InStatusRespOperatingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *MembersV2InStatusRespOperatingStatus) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}
