/*
 * ELB
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */

package model

import (
	"encoding/json"
	"errors"
	"github.com/huaweicloud/huaweicloud-sdk-go-v3/core/converter"
	"strings"
)

// 转发策略对象，用于状态树
type L7policiesV2InStatusResp struct {
	// 转发策略ID
	Id string `json:"id"`
	// 转发策略名称
	Name string `json:"name"`
	// 转发策略关联的转发规则列表
	Rules []L7rulesV2InStatusResp `json:"rules"`
	// 转发策略的转发动作；取值：REDIRECT_TO_POOL：转发到后端云服务器组；REDIRECT_TO_LISTENER：重定向到监听器
	Action L7policiesV2InStatusRespAction `json:"action"`
	// 健康检查的配置状态；该字段为预留字段，暂未启用。默认为ACTIVE。
	ProvisioningStatus string `json:"provisioning_status"`
}

func (o L7policiesV2InStatusResp) String() string {
	data, _ := json.Marshal(o)
	return strings.Join([]string{"L7policiesV2InStatusResp", string(data)}, " ")
}

type L7policiesV2InStatusRespAction struct {
	value string
}

type L7policiesV2InStatusRespActionEnum struct {
	REDIRECT_TO_POOL     L7policiesV2InStatusRespAction
	REDIRECT_TO_LISTENER L7policiesV2InStatusRespAction
}

func GetL7policiesV2InStatusRespActionEnum() L7policiesV2InStatusRespActionEnum {
	return L7policiesV2InStatusRespActionEnum{
		REDIRECT_TO_POOL: L7policiesV2InStatusRespAction{
			value: "REDIRECT_TO_POOL",
		},
		REDIRECT_TO_LISTENER: L7policiesV2InStatusRespAction{
			value: "REDIRECT_TO_LISTENER",
		},
	}
}

func (c L7policiesV2InStatusRespAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *L7policiesV2InStatusRespAction) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}
