/*
 * ELB
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */

package model

import (
	"encoding/json"
	"errors"
	"github.com/huaweicloud/huaweicloud-sdk-go-v3/core/converter"
	"strings"
)

// 转发规则对象，用于状态树中
type L7rulesV2InStatusResp struct {
	// 转发规则的匹配内容。PATH：匹配请求中的路径；HOST_NAME：匹配请求中的域名
	Type L7rulesV2InStatusRespType `json:"type"`
	// 转发规则ID
	Id string `json:"id"`
	// 转发规则的配置状态；该字段为预留字段，暂未启用。默认为ACTIVE。
	ProvisioningStatus string `json:"provisioning_status"`
}

func (o L7rulesV2InStatusResp) String() string {
	data, _ := json.Marshal(o)
	return strings.Join([]string{"L7rulesV2InStatusResp", string(data)}, " ")
}

type L7rulesV2InStatusRespType struct {
	value string
}

type L7rulesV2InStatusRespTypeEnum struct {
	PATH      L7rulesV2InStatusRespType
	HOST_NAME L7rulesV2InStatusRespType
}

func GetL7rulesV2InStatusRespTypeEnum() L7rulesV2InStatusRespTypeEnum {
	return L7rulesV2InStatusRespTypeEnum{
		PATH: L7rulesV2InStatusRespType{
			value: "PATH",
		},
		HOST_NAME: L7rulesV2InStatusRespType{
			value: "HOST_NAME",
		},
	}
}

func (c L7rulesV2InStatusRespType) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *L7rulesV2InStatusRespType) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}
