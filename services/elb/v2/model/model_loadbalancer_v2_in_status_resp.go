/*
 * ELB
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */

package model

import (
	"encoding/json"
	"errors"
	"github.com/huaweicloud/huaweicloud-sdk-go-v3/core/converter"
	"strings"
)

// 负载均衡器对象，用于负载均衡器状态树中
type LoadbalancerV2InStatusResp struct {
	// 负载均衡器名称
	Name string `json:"name"`
	// 负载均衡器ID
	Id string `json:"id"`
	// 负载均衡器关联的监听器列表
	Listeners []ListenersV2InStatusResp `json:"listeners"`
	// 负载均衡器关联的后端云服务器组列表
	Pools []PoolsV2InStatusResp `json:"pools"`
	// 负载均衡器的操作状态；该字段为预留字段，暂未启用。默认为ONLINE。
	OperatingStatus LoadbalancerV2InStatusRespOperatingStatus `json:"operating_status"`
	// 负载均衡器的配置状态；该字段为预留字段，暂未启用。默认为ACTIVE。
	ProvisioningStatus LoadbalancerV2InStatusRespProvisioningStatus `json:"provisioning_status"`
}

func (o LoadbalancerV2InStatusResp) String() string {
	data, _ := json.Marshal(o)
	return strings.Join([]string{"LoadbalancerV2InStatusResp", string(data)}, " ")
}

type LoadbalancerV2InStatusRespOperatingStatus struct {
	value string
}

type LoadbalancerV2InStatusRespOperatingStatusEnum struct {
	ONLINE     LoadbalancerV2InStatusRespOperatingStatus
	OFFLINE    LoadbalancerV2InStatusRespOperatingStatus
	DEGRADED   LoadbalancerV2InStatusRespOperatingStatus
	DISABLED   LoadbalancerV2InStatusRespOperatingStatus
	NO_MONITOR LoadbalancerV2InStatusRespOperatingStatus
}

func GetLoadbalancerV2InStatusRespOperatingStatusEnum() LoadbalancerV2InStatusRespOperatingStatusEnum {
	return LoadbalancerV2InStatusRespOperatingStatusEnum{
		ONLINE: LoadbalancerV2InStatusRespOperatingStatus{
			value: "ONLINE",
		},
		OFFLINE: LoadbalancerV2InStatusRespOperatingStatus{
			value: "OFFLINE",
		},
		DEGRADED: LoadbalancerV2InStatusRespOperatingStatus{
			value: "DEGRADED",
		},
		DISABLED: LoadbalancerV2InStatusRespOperatingStatus{
			value: "DISABLED",
		},
		NO_MONITOR: LoadbalancerV2InStatusRespOperatingStatus{
			value: "NO_MONITOR",
		},
	}
}

func (c LoadbalancerV2InStatusRespOperatingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *LoadbalancerV2InStatusRespOperatingStatus) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}

type LoadbalancerV2InStatusRespProvisioningStatus struct {
	value string
}

type LoadbalancerV2InStatusRespProvisioningStatusEnum struct {
	ACTIVE         LoadbalancerV2InStatusRespProvisioningStatus
	PENDING_CREATE LoadbalancerV2InStatusRespProvisioningStatus
	ERROR          LoadbalancerV2InStatusRespProvisioningStatus
}

func GetLoadbalancerV2InStatusRespProvisioningStatusEnum() LoadbalancerV2InStatusRespProvisioningStatusEnum {
	return LoadbalancerV2InStatusRespProvisioningStatusEnum{
		ACTIVE: LoadbalancerV2InStatusRespProvisioningStatus{
			value: "ACTIVE",
		},
		PENDING_CREATE: LoadbalancerV2InStatusRespProvisioningStatus{
			value: "PENDING_CREATE",
		},
		ERROR: LoadbalancerV2InStatusRespProvisioningStatus{
			value: "ERROR",
		},
	}
}

func (c LoadbalancerV2InStatusRespProvisioningStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *LoadbalancerV2InStatusRespProvisioningStatus) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}
