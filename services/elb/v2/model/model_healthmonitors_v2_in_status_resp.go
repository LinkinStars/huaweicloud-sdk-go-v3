/*
 * ELB
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */

package model

import (
	"encoding/json"
	"errors"
	"github.com/huaweicloud/huaweicloud-sdk-go-v3/core/converter"
	"strings"
)

// 健康检查对象，用于状态树中
type HealthmonitorsV2InStatusResp struct {
	// 健康检查ID
	Id string `json:"id"`
	// 健康检查名称
	Name string `json:"name"`
	// 健康检查类型
	Type HealthmonitorsV2InStatusRespType `json:"type"`
	// 健康检查的配置状态；该字段为预留字段，暂未启用。默认为ACTIVE。
	ProvisioningStatus string `json:"provisioning_status"`
}

func (o HealthmonitorsV2InStatusResp) String() string {
	data, _ := json.Marshal(o)
	return strings.Join([]string{"HealthmonitorsV2InStatusResp", string(data)}, " ")
}

type HealthmonitorsV2InStatusRespType struct {
	value string
}

type HealthmonitorsV2InStatusRespTypeEnum struct {
	UDP_CONNECT HealthmonitorsV2InStatusRespType
	TCP         HealthmonitorsV2InStatusRespType
	HTTP        HealthmonitorsV2InStatusRespType
}

func GetHealthmonitorsV2InStatusRespTypeEnum() HealthmonitorsV2InStatusRespTypeEnum {
	return HealthmonitorsV2InStatusRespTypeEnum{
		UDP_CONNECT: HealthmonitorsV2InStatusRespType{
			value: "UDP_CONNECT",
		},
		TCP: HealthmonitorsV2InStatusRespType{
			value: "TCP",
		},
		HTTP: HealthmonitorsV2InStatusRespType{
			value: "HTTP",
		},
	}
}

func (c HealthmonitorsV2InStatusRespType) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.value)
}

func (c *HealthmonitorsV2InStatusRespType) UnmarshalJSON(b []byte) error {
	myConverter := converter.StringConverterFactory("string")
	if myConverter != nil {
		val, err := myConverter.CovertStringToInterface(strings.Trim(string(b[:]), "\""))
		if err == nil {
			c.value = val.(string)
			return nil
		}
		return err
	} else {
		return errors.New("convert enum data to string error")
	}
}
